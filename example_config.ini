"""
    Copyright (c) 2021 - present NekrodNIK, Stepan Skriabin, rus-ai and other.
    Look at the file AUTHORS.md(located at the root of the project) to get the
    full list.

    This file is part of Morelia Server.

    Morelia Server is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Morelia Server is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Morelia Server. If not, see <https://www.gnu.org/licenses/>.
"""

[DATABASE]
# Configuring database access
# When URI is:
# SQLite = sqlite:/C:full/path/to/database/database_name.db
# SQLite = sqlite:/:memory:
# PostgreSQL = postgres://postgres:123456@127.0.0.1/database_name?debug=True
# MySQL = mysql://user:password@host/database
URI = sqlite:db_sqlite.db


[HASH_SIZE]
# size of output hash digest in bytes
PASSWORD = 32
# size of output auth_id digest in bytes
AUTH_ID = 16


[LOGGING]
# Level status:
#        50 - CRITICAL
#        40 - ERROR
#        30 - WARNING
#        25 - SUCCES
#        20 - INFO
#        10 - DEBUG
#        5  - TRACE
LEVEL = 20

# Time to indicate in days
EXPIRATION_DATE = 3
DEBUG_EXPIRATION_DATE = 3

UVICORN_LOGGING_DISABLE = true

# Log message formating
DEBUG = [<b>{time: DD/MM/YY HH:mm:ss}</>]  [<g>{level}</>]  {module} | {function} | line:{line: >3} | {message}
ERROR = [<b>{time:DD/MM/YY HH:mm:ss}</>]  [<r>{level}</>]  {module} | {function} | line:{line: >3} | {message}
INFO = [<b>{time:DD/MM/YY HH:mm:ss}</>]  [<e>{level}</>]  {message}


[TEMPLATES]
# Settings Jinja2
FOLDER = templates


[SERVER_LIMIT]
# Setting up number of messages that server gives out on
# "get_all_message" client request
MESSAGES = 100
# Setting up number of users that server gives out on
# "get_user_info" client request
USERS = 100


[SUPERUSER]
UUID = 123456789
USERNAME = superuser
LOGIN = login
PASSWORD = password
SALT = salt
KEY = key
HASH_PASSWORD = 8b915f2f0b0d0ccf27854dd708524d0b5a91bdcd3775c6d3335f63d015a43ce1


[ADMIN]
# change in prodaction
# command for generate secret_key(insert in console): python -c "import os; print(os.urandom(24).hex())"
SECRET_KEY = 365fdb0a1dad5ba48518cfa63f407e9aae86b032cf34bd4b